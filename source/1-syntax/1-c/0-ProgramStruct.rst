程序结构
==========

我们在学习每一种编程语言时，都会先学习写一个\ ``hello world``\ 的demo程序，下面我们将从这个小demo程序来窥探一下我们C程序的程序结构

.. code-block:: c
	
	#include <stdio.h>

	int main()
	{
	   /* 我的第一个 C 程序 */
	   int ret = 0;

	   printf("Hello, World! \n");
	   
	   return ret;
	}

以上是一个可以输出\ ``hello world``\ 的简单C代码，该代码的组成部分为：

- \ **预处理指令**\ ：\ ``#include <stdio.h>``\ 告诉C编译器在实际编译之前需要将\ ``stdio.h``\ 文件内容复制包含到当前文件
- \ **函数**\ ：\ ``int main()``\ 是C程序的执行入口；每个C程序有且只能有一个\ ``main函数``\  
- \ **语句&表达式**\ ：\ ``return 0``\ 会终止\ ``main()函数``\ 并返回0；在C中，每个语句必须以分号结束。它表明一个逻辑实体的结束
- \ **常量&变量**\ ：\ ``ret``\ 是一个\ ``int型变量``\ 、\ ``hello world!\n``\ 是一个字符串常量
- \ **注释**\ ：\ ``/*...*/``\ 将会被编译器忽略，这里放置程序的注释内容

从另外一个角度来看demo程序，该程序是由各种令牌组成：\ ``关键字``\ 、\ ``标识符``\ 、\ ``常量``\ 、\ ``运算符``\ 

\ **C标识符**\ 是用来标识\ ``常量名``\ 、\ ``变量名``\ 、\ ``函数名``\ 或任何其他用户自定义的名称。一个标识符以字母\ ``A-Z``\ 或\ ``a-z``\ 或\ ``下划线 _``\  开始，后跟\ ``0个或多个字母、下划线和数字(0-9)``\

需要注意的是；

- C标识符内不允许出现标点字符，比如\ ``@``\ 、\ ``$``\ 和\ ``%``\ 
- C是区分大小写的编程语言；\ ``Manpower``\ 和\ ``manpower``\ 是两个不同的标识符

\ **C关键字**\ 就是C中的保留字，它们被赋予特殊意义。这些保留字不能作为常量名，变量名或其它标识符名称。上述demo中的\ ``include``\ 、\ ``int``\ 、\ ``return``\ 都是C关键字。C中一共有32个关键字，详解可见\ `C关键字 <./keyword/index.html>`_\ 

\ **C常量**\ 可以是数值常量\ ``0``\ ；也可以是字符串常量\ ``hello world``\ 

\ **C运算符**\ 有很多，它是构成表达式、语句、代码块的重要组成部分。详解可见\ `C运算符 <./3-symbol/index.html>`_\ 

最后特别容易忽视的就是C中的\ ``空格``\ ，我们在编程中，为了规范，不同字段之间都会以空格隔开，便于编译器识别解释各字段的含义

.. code-block:: c

	int ret = 0;